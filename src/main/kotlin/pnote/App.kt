/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package pnote

import kotlinx.coroutines.runBlocking
import pnote.projections.projectBrowseNotes
import pnote.scopes.AppScope
import pnote.stories.browseNotes
import pnote.tools.*
import pnote.tools.AccessLevel.*
import java.io.File

class App(private val commandName: String) : AppScope {
    private val homeDir = System.getProperty("user.home")!!.also { check(it.isNotBlank()) }
    private val appDir = homeDir.let { home -> File(home, ".$commandName").apply { mkdirs() } }
    private val userDir = appDir.let { app -> File(app, "main").apply { mkdirs() } }

    override val cryptor: Cryptor = fileCryptor(userDir)

    override val noteBag: NoteBag = object : NoteBag {
        override fun readBanners(): ReadBannersResult = when (val accessLevel = cryptor.accessLevel) {
            Empty -> ReadBannersResult(accessLevel, emptySet())
            ConfidentialLocked -> ReadBannersResult(accessLevel, emptySet())
            ConfidentialUnlocked -> ReadBannersResult(accessLevel, setOf(Banner.Basic(1, "Sample")))
            Secret -> TODO()
        }
    }

    override val logTag: String = commandName
}

fun main(args: Array<String>) {
    val commandSuffix = args.getOrNull(0)?.let { "-debug" } ?: ""
    val commandName = "pnote$commandSuffix"
    val app = App(commandName)
    val story = app.browseNotes()
    val projector = Projector()
    val projection = projector.projectBrowseNotes(story)
    runBlocking { projection.join() }
}

